
@{
    ViewBag.Title = "Demo";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<p>1. SignalR</p>
<p>2. WebAPI</p>
<p>3. DesignPattern</p>
    <p style="padding-left:2em;color:red">简单工厂： 优点--把对象的创建转移到工厂类，接触上端和下端的耦合。缺点--工厂类是不稳定的。
    一个工厂中职责太多了。工厂方法中，拆成了很多工厂类。</p>
    <p style="padding-left:2em;color:red">工厂方法：每个工厂负责一个对象的创建。对扩展开放，对修改关闭的。增加功能时，横向扩展即可。
    支持了开闭原则。变复杂了，先new一个工厂-工厂创建对象-在执行方法。HttpHandler典型应用。</p>
    <p style="padding-left:2em;color:red">抽象工厂：一个工厂多个方法。和工厂方法扩展不同。产品级的扩展。比如数据库的切换。
    缺点：不能扩展工厂职责。工厂是稳定的、固定的适合使用抽象工厂。</p>
<p>4. NoSql</p>
@*<p>5. 二叉树</p>*@
